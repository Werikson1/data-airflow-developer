version: '3'
x-airflow-common:
  &airflow-common
  build:
    context: .
  volumes:
    - ./dags:/opt/airflow/dags
    - logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./tests:/opt/airflow/tests
    - ./airflow.cfg:/opt/airflow/airflow.cfg
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres:5432/airflow'
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 10
    AIRFLOW__CORE__PLUGINS_FOLDER: '/opt/airflow/plugins'
    AIRFLOW__CORE__DAGS_FOLDER: '/opt/airflow/dags'
    AIRFLOW__LOGGING__BASE_LOG_FORDER: '/opt/airflow/logs'
    AIRFLOW__LOGGING__DAG_PROCESSOR_MANAGER_LOG_LOCATION: '/opt/airflow/logs/dag_processor_manager/dag_processor_manager.log'
    AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY: '/opt/airflow/logs/scheduler'
    GOOGLE_APPLICATION_CREDENTIALS: '/home/airflow/.config/gcloud/application_default_credentials.json'

services:
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: airflow@grupoboticario.com.br
      PGADMIN_DEFAULT_PASSWORD: airflow
    ports:
      - "16543:80"
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
      <<: *airflow-common
      command: scheduler
      healthcheck:
        test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
        interval: 10s
        timeout: 10s
        retries: 5
      restart: always
      depends_on:
        airflow-init:
          condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    command: version
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

volumes:
  postgres-db-volume:
    external: false
  logs:
    external: false
